// let str = '123';
// let str2 = '456';
// console.log(+str + (+str2));

var str1 = '12222222222222222222222222222222222222224090192111111111111111111111111111940999999999999901222222222229444012930192310293333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333456788888888888889000000000000000009876543211111111111111111111111111111234567890987654321234567890987654321234567890098765432123467890098754312346789098765432345678900987654323456789';
var str2 = '2333333333333333333333333332222222222222222222332323232323232323232323323233232333333333333333333333333333333333333333333333333333333333322222222222222222222222222222222222222222222222222222222333333333333333333333333333333333333333333333';
function addTwoNumbers(str1,str2) {
    // 字符串  不能相加
    // 新的数据结构来打理它  [] 来存储每一位的相加， 进位
    // 字符串有 index
    // join 方法 
    let carry = 0,  //是否有进位
    l1 = str1.length, //数的长度
    l2 = str2.length, //数的长度
    arr = [];         //位相加的存储

    //像写加法 
    // 怎么遍历数组的每一位呢？
    var max = Math.max(l1,l2); //最长的长度
    for(let i = l1 - 1, j = l2 -1, n = max - 1; n >= 0; n--,i--,j--) {
        var sum = (+str1[i] || 0)+ (+str2[j] || 0) + carry;
        if(sum >= 10) {
            carry = 1;
            arr.push(sum - 10);
        }else{
            carry = 0;
            arr.push(sum);
        }

    }
    if(carry > 0)
        arr.push(array);

    return arr.reverse().join('');
}
console.log(str1,str2);